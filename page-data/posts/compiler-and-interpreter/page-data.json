{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/compiler-and-interpreter","result":{"data":{"markdownRemark":{"id":"46d89a39-d9dd-576e-a1b8-b1012daa4edb","html":"<h2 id=\"컴파일러-compiler-\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC-compiler-\" aria-label=\"컴파일러 compiler  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴파일러( Compiler )</h2>\n<ul>\n<li>컴파일러는 사람이 소스코드를 작성하면 그 소스코드를 ‘한번에’ 번역을 한다.</li>\n<li>줄 단위로 번역을 진행하는 인터프리터에 비해 번역 시간이 오래 걸리고 그 과정이 복잡하다.</li>\n<li>한 번 번역을 하면 실행파일(목적파일)이 생성 되어 메모리를 사용하지만 다음에 실행할 때는 이 파일만 실행하면 되기 때문에 실행 시간은 인터프리터에 비해 빠르다.</li>\n</ul>\n<h2 id=\"인터프리터--interpreter-\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0--interpreter-\" aria-label=\"인터프리터  interpreter  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터프리터 ( Interpreter )</h2>\n<ul>\n<li>인터프리터는 한줄 한줄 줄단위로 번역과 실행을 진행하기 때문에 번역시간은 빠르지만 실행시간은 느리다.</li>\n<li>직접 실행하기 때문에 실행파일을 생성하지 않아 메모리는 사용하지 않는다.</li>\n<li>줄 단위로 번역과 실행을 진행하기 때문에 중간에 문제 있는 코드를 만난 경우 그 줄부터 아래는 실행되지 않는다.</li>\n</ul>\n<h2 id=\"그럼-개발자는-인터프리터를-쓰는게-좋은가\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8A%94-%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0%EB%A5%BC-%EC%93%B0%EB%8A%94%EA%B2%8C-%EC%A2%8B%EC%9D%80%EA%B0%80\" aria-label=\"그럼 개발자는 인터프리터를 쓰는게 좋은가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 개발자는 인터프리터를 쓰는게 좋은가?</h2>\n<ul>\n<li>인터프리터의 경우 웹에서 많이 사용되는데 그 이유는 컴파일러로 웹을 작성할 경우 만약 중간에 오류를 유발하는 코드를 작성 했거나 유지보수 하는 도중에 치명적인 오류를 발생하는 코드를 집어넣었다면 그 웹은 아예 작동이 되지 않고 사용자가 볼 수 없게 된다.</li>\n<li>하지만 인터프리터를 사용하면 일정 부분이 오류를 내도 그 전까지는 작동이 되기 때문에 컴파일러에 비해서 손실을 줄일 수 있다. 그리고 오류가 어디서 났는지 바로 확인할 수 있기 때문에 유지보수가 유리하다고 생각이 된다. 그렇다고 인터프리터가 항상 좋은것은 아니고 위에서 언급했다시피 실행속도가 느리기 때문에 퍼포먼스를 중요시한다면 컴파일러를 적용하는것이 좋다.   </li>\n</ul>\n<h5 id=\"참조-httpssteady-snailtistorycom1\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0-httpssteady-snailtistorycom1\" aria-label=\"참조 httpssteady snailtistorycom1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조: <a href=\"https://steady-snail.tistory.com/1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://steady-snail.tistory.com/1</a></h5>","fields":{"slug":"/posts/compiler-and-interpreter","tagSlugs":["/tag/compiler/","/tag/interpreter/"]},"frontmatter":{"date":"2020-03-06T22:12:03.284Z","description":"컨파일러와 인터프리터의 차이는 무엇인지 알아보자.","tags":["compiler","interpreter"],"title":"Compiler vs. Interpreter","socialImage":"#"}}},"pageContext":{"slug":"/posts/compiler-and-interpreter"}}}